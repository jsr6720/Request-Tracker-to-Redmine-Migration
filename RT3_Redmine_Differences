h1. RT Redmine Differences

*This uses Redmine's wiki format. Copy into a wiki page to see it stylized*

{{>toc}}

h2. Introduction

This page is more about the general features in Redmine vs. RT, not a comparison of custom variables, or configuration options. This is not an exhaustive list; this was written as a simple comparison of basic feature sets between Request Tracker 3.8.4 and Redmine 1.0.4.

h2. Features unique to Redmine

h3. More than just a ticket tracking system

Request Tracker excels at one thing, ticket tracking. Redmine is an "issue tracking system":http://www.redmine.org/wiki/redmine/RedmineIssueTrackingSetup  in addition to all of the other modules available.

* "Redmine Modules":http://www.redmine.org/wiki/redmine/Guide
** Issue tracking
** Time tracking
** News
** Documents
** Files
** Wiki
** Repository
** Boards

h2. Features unique to Request Tracker

h3. Reply to closed ticket re-opens it

In redmine replying to a ticket does not change the status.

h3. Outgoing e-mails stored

RT tickets show an entire chain of events, including all automated e-mails with full headers. In experience, not very useful, but it's a difference none-the-less.

h3. Comment vs. Reply to requester

RT has a concept of replying to requester and making comments on an issue.  Redmine will send update e-mails for every comment, regardless of content.
There is an open feature request for "private comments":http://www.redmine.org/issues/1554 that addresses this issue.

"Redmine Stealth Plugin":http://www.redmine.org/wiki/redmine/PluginRedmineStealth to temporarily  disable notifications on actions taken by a user. 
It is ajax based, so if I wanted to make a comment on an issue that sent no notifications; I would click the *Enable Stealth Mode* link, take my actions, then *Disable Stealth Mode* after I'm done.
Again this is user based, so it does not affect other actions taken by other users.

There is an open request on Redmine for functionality similar to this:
http://www.redmine.org/issues/6229

h3. Ticket Requester

One of the more advanced features of RT was the *People* section. RT stored who created the ticket, who owned the ticket, and requesters of the ticket. Created is a searchable, but essentially hidden attribute of a RT ticket.
This allowed RT users to create a ticket for a user, and assign them as the requester. This is not possible in Redmine.

Redmine only stores Author (RT - creator). The only way to get an issue created with the proper author is for that person to create it via e-mail or by logging in.

Open feature request to change that:
http://www.redmine.org/issues/2035

h3. Merge Tickets

In RT when a ticket was merged with another, only one ticket existed at the end of the process. The original ticket number would point to the ticket it was merged into, and the content from the merging ticket would appear in the merged ticket.

This was useful for joining several e-mails that were related to one ticket.

In Redmine you can only link related tickets by adding a *duplicates* or *duplicated by* related issue. This will only establish a link between the two issues, not copy content from one to another.

Also, there is a standing practice to find the duplicate ticket and close it, so time/comments/updates are logged against one issue.

There are a few standing feature request for this functionality
* http://www.redmine.org/issues/1624
* http://www.redmine.org/issues/3708

To accomplish the same concept as RT "merge" mark multiple Redmine issues *duplicates* and update the most recent ticket as the "active" one.

h3. Reminders

In RT you could attach reminders to tickets that would show up on your main page. Reminders could have a date and subject. There is no concept of this in Redmine.

At best comments can be made against an issue, or watch an issue.

*NOTE* reminders live in the tickets table as rt3.tickets.type = 'reminder' so they could be converted as pseudo tickets if needed, related to the attached ticket.

h3. Ticket Status 'delete'

There is no way to *delete* an issue in Redmine short of deleting an entire project. Currently the two equivalent statuses would be *Closed* or *Rejected*.

In RT a ticket could have a status of *delete* and not ever be findable again except via ticket number or querying the database.

